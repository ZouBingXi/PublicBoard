<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.szuer.publicboard.mapper.LogsMapper" >
  <resultMap id="BaseResultMap" type="cn.szuer.publicboard.model.Logs" >
    <id column="logsID" property="logsid" jdbcType="INTEGER" />
    <result column="userID" property="userid" jdbcType="INTEGER" />
    <result column="operateType" property="operatetype" jdbcType="INTEGER" />
    <result column="operateInfo" property="operateinfo" jdbcType="VARCHAR" />
    <result column="targetID" property="targetid" jdbcType="INTEGER" />
    <result column="operateTime" property="operatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    logsID, userID, operateType, operateInfo, targetID, operateTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.szuer.publicboard.model.LogsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from logs
    where logsID = #{logsid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from logs
    where logsID = #{logsid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.szuer.publicboard.model.LogsExample" >
    delete from logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.szuer.publicboard.model.Logs" >
    insert into logs (logsID, userID, operateType, 
      operateInfo, targetID, operateTime
      )
    values (#{logsid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{operatetype,jdbcType=INTEGER}, 
      #{operateinfo,jdbcType=VARCHAR}, #{targetid,jdbcType=INTEGER}, #{operatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.szuer.publicboard.model.Logs" >
    insert into logs
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logsid != null" >
        logsID,
      </if>
      <if test="userid != null" >
        userID,
      </if>
      <if test="operatetype != null" >
        operateType,
      </if>
      <if test="operateinfo != null" >
        operateInfo,
      </if>
      <if test="targetid != null" >
        targetID,
      </if>
      <if test="operatetime != null" >
        operateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logsid != null" >
        #{logsid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="operatetype != null" >
        #{operatetype,jdbcType=INTEGER},
      </if>
      <if test="operateinfo != null" >
        #{operateinfo,jdbcType=VARCHAR},
      </if>
      <if test="targetid != null" >
        #{targetid,jdbcType=INTEGER},
      </if>
      <if test="operatetime != null" >
        #{operatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.szuer.publicboard.model.LogsExample" resultType="java.lang.Integer" >
    select count(*) from logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update logs
    <set >
      <if test="record.logsid != null" >
        logsID = #{record.logsid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.operatetype != null" >
        operateType = #{record.operatetype,jdbcType=INTEGER},
      </if>
      <if test="record.operateinfo != null" >
        operateInfo = #{record.operateinfo,jdbcType=VARCHAR},
      </if>
      <if test="record.targetid != null" >
        targetID = #{record.targetid,jdbcType=INTEGER},
      </if>
      <if test="record.operatetime != null" >
        operateTime = #{record.operatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update logs
    set logsID = #{record.logsid,jdbcType=INTEGER},
      userID = #{record.userid,jdbcType=INTEGER},
      operateType = #{record.operatetype,jdbcType=INTEGER},
      operateInfo = #{record.operateinfo,jdbcType=VARCHAR},
      targetID = #{record.targetid,jdbcType=INTEGER},
      operateTime = #{record.operatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.szuer.publicboard.model.Logs" >
    update logs
    <set >
      <if test="userid != null" >
        userID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="operatetype != null" >
        operateType = #{operatetype,jdbcType=INTEGER},
      </if>
      <if test="operateinfo != null" >
        operateInfo = #{operateinfo,jdbcType=VARCHAR},
      </if>
      <if test="targetid != null" >
        targetID = #{targetid,jdbcType=INTEGER},
      </if>
      <if test="operatetime != null" >
        operateTime = #{operatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where logsID = #{logsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.szuer.publicboard.model.Logs" >
    update logs
    set userID = #{userid,jdbcType=INTEGER},
      operateType = #{operatetype,jdbcType=INTEGER},
      operateInfo = #{operateinfo,jdbcType=VARCHAR},
      targetID = #{targetid,jdbcType=INTEGER},
      operateTime = #{operatetime,jdbcType=TIMESTAMP}
    where logsID = #{logsid,jdbcType=INTEGER}
  </update>
</mapper>