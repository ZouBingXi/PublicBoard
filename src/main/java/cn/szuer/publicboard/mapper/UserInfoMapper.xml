<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.szuer.publicboard.mapper.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="cn.szuer.publicboard.model.UserInfo" >
    <id column="userID" property="userid" jdbcType="INTEGER" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="anonymousState" property="anonymousstate" jdbcType="TINYINT" />
    <result column="banState" property="banstate" jdbcType="TINYINT" />
    <result column="userType" property="usertype" jdbcType="INTEGER" />
    <result column="loginTime" property="logintime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.szuer.publicboard.model.UserInfo" extends="BaseResultMap" >
    <result column="headImage" property="headimage" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userID, userName, password, anonymousState, banState, userType, loginTime
  </sql>
  <sql id="Blob_Column_List" >
    headImage
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.szuer.publicboard.model.UserInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.szuer.publicboard.model.UserInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_info
    where userID = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_info
    where userID = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.szuer.publicboard.model.UserInfoExample" >
    delete from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.szuer.publicboard.model.UserInfo" >
    insert into user_info (userID, userName, password, 
      anonymousState, banState, userType, 
      loginTime, headImage)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{anonymousstate,jdbcType=TINYINT}, #{banstate,jdbcType=TINYINT}, #{usertype,jdbcType=INTEGER}, 
      #{logintime,jdbcType=TIMESTAMP}, #{headimage,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="cn.szuer.publicboard.model.UserInfo" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userID,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="anonymousstate != null" >
        anonymousState,
      </if>
      <if test="banstate != null" >
        banState,
      </if>
      <if test="usertype != null" >
        userType,
      </if>
      <if test="logintime != null" >
        loginTime,
      </if>
      <if test="headimage != null" >
        headImage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="anonymousstate != null" >
        #{anonymousstate,jdbcType=TINYINT},
      </if>
      <if test="banstate != null" >
        #{banstate,jdbcType=TINYINT},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=INTEGER},
      </if>
      <if test="logintime != null" >
        #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="headimage != null" >
        #{headimage,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.szuer.publicboard.model.UserInfoExample" resultType="java.lang.Integer" >
    select count(*) from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_info
    <set >
      <if test="record.userid != null" >
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.anonymousstate != null" >
        anonymousState = #{record.anonymousstate,jdbcType=TINYINT},
      </if>
      <if test="record.banstate != null" >
        banState = #{record.banstate,jdbcType=TINYINT},
      </if>
      <if test="record.usertype != null" >
        userType = #{record.usertype,jdbcType=INTEGER},
      </if>
      <if test="record.logintime != null" >
        loginTime = #{record.logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.headimage != null" >
        headImage = #{record.headimage,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update user_info
    set userID = #{record.userid,jdbcType=INTEGER},
      userName = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      anonymousState = #{record.anonymousstate,jdbcType=TINYINT},
      banState = #{record.banstate,jdbcType=TINYINT},
      userType = #{record.usertype,jdbcType=INTEGER},
      loginTime = #{record.logintime,jdbcType=TIMESTAMP},
      headImage = #{record.headimage,jdbcType=LONGVARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_info
    set userID = #{record.userid,jdbcType=INTEGER},
      userName = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      anonymousState = #{record.anonymousstate,jdbcType=TINYINT},
      banState = #{record.banstate,jdbcType=TINYINT},
      userType = #{record.usertype,jdbcType=INTEGER},
      loginTime = #{record.logintime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.szuer.publicboard.model.UserInfo" >
    update user_info
    <set >
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="anonymousstate != null" >
        anonymousState = #{anonymousstate,jdbcType=TINYINT},
      </if>
      <if test="banstate != null" >
        banState = #{banstate,jdbcType=TINYINT},
      </if>
      <if test="usertype != null" >
        userType = #{usertype,jdbcType=INTEGER},
      </if>
      <if test="logintime != null" >
        loginTime = #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="headimage != null" >
        headImage = #{headimage,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where userID = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.szuer.publicboard.model.UserInfo" >
    update user_info
    set userName = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      anonymousState = #{anonymousstate,jdbcType=TINYINT},
      banState = #{banstate,jdbcType=TINYINT},
      userType = #{usertype,jdbcType=INTEGER},
      loginTime = #{logintime,jdbcType=TIMESTAMP},
      headImage = #{headimage,jdbcType=LONGVARBINARY}
    where userID = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.szuer.publicboard.model.UserInfo" >
    update user_info
    set userName = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      anonymousState = #{anonymousstate,jdbcType=TINYINT},
      banState = #{banstate,jdbcType=TINYINT},
      userType = #{usertype,jdbcType=INTEGER},
      loginTime = #{logintime,jdbcType=TIMESTAMP}
    where userID = #{userid,jdbcType=INTEGER}
  </update>
</mapper>